{"version":3,"file":"component---src-pages-cuadrados-medios-tsx-079a42554934469c4179.js","mappings":"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","sources":["webpack://gatsby-starter-default/./src/pages/cuadrados-medios.tsx","webpack://gatsby-starter-default/./src/util/PruebaDeMedias.ts","webpack://gatsby-starter-default/./src/util/calcularSemillaMedios.ts"],"sourcesContent":["import * as React from 'react';\nimport { PageProps } from 'gatsby';\nimport { Layout, Seo, Input } from '../components';\n\nimport { calcularSemillaMedios, PruebaDeMedias } from '../util';\nimport { respuestaPruebaMedias, PruebaMediasDefault } from '../util/PruebaDeMedias';\n\ntype DataProps = {\n\tsemilla?: number;\n\tcantidadNumerosR?: number;\n\trespuesta: Array<Respuesta>;\n\trespuestaPruebasMedias: respuestaPruebaMedias;\n};\n\ntype Respuesta = {\n\tsemilla: string;\n\tcuadrado: number;\n\tnumeroR: string;\n};\n\nexport default class cuadradosMedios extends React.Component<PageProps, DataProps> {\n\tconstructor(props: any) {\n\t\tsuper(props);\n\n\t\tthis.state = {\n\t\t\tcantidadNumerosR: 2,\n\t\t\tsemilla: 1234,\n\t\t\trespuesta: [],\n\t\t\trespuestaPruebasMedias: PruebaMediasDefault,\n\t\t};\n\t}\n\n\tcalcular() {\n\t\tthis.limpiarRespuestas();\n\n\t\tlet semilla: number = this.state.semilla;\n\t\tlet semillaAnterior: string = `${semilla}`;\n\t\tlet cantidadNumerosR = this.state.cantidadNumerosR;\n\n\t\tif (String(semilla).length > 3 && semilla !== undefined && cantidadNumerosR >= 1) {\n\t\t\tfor (let i = 0; i < cantidadNumerosR; i++) {\n\t\t\t\tlet cuadrado: number = Math.pow(semilla, 2);\n\t\t\t\tlet numeroR: string = calcularSemillaMedios(`${cuadrado}`);\n\t\t\t\tsemilla = +numeroR;\n\n\t\t\t\tthis.agregarRespuesta({\n\t\t\t\t\tsemilla: semillaAnterior,\n\t\t\t\t\tcuadrado,\n\t\t\t\t\tnumeroR,\n\t\t\t\t});\n\t\t\t\tsemillaAnterior = numeroR;\n\t\t\t}\n\t\t}\n\n\t\tif (String(semilla).length <= 3 || semilla === undefined) {\n\t\t\talert(\n\t\t\t\t'Para utilizar el algoritmo de cuadrados medios es necesario ingresar un numero con más de 3 dígitos'\n\t\t\t);\n\t\t}\n\n\t\tif (cantidadNumerosR <= 0) {\n\t\t\talert('La cantidad de numero r debe será mayor a 0');\n\t\t}\n\n\t\tlet data: respuestaPruebaMedias = PruebaDeMedias(this.state.respuesta);\n\t\tthis.setState({ respuestaPruebasMedias: data });\n\t\tconsole.log(data);\n\t}\n\n\tagregarRespuesta(resultado: Respuesta) {\n\t\tlet respuestas: Array<Respuesta> = this.state.respuesta;\n\t\trespuestas.push(resultado);\n\n\t\tthis.setState({ respuesta: respuestas });\n\t}\n\n\tenter(event: React.KeyboardEvent) {\n\t\tif (event.key == 'Enter') {\n\t\t\tthis.calcular();\n\t\t}\n\t}\n\n\tlimpiarRespuestas() {\n\t\tthis.state.respuesta.splice(0, this.state.respuesta.length);\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<Layout>\n\t\t\t\t<Seo\n\t\t\t\t\ttitle=\"Calculadora Cuadrados Medios\"\n\t\t\t\t\tdescription={`Calculadora de algoritmo de cuadrados medios`}\n\t\t\t\t/>\n\t\t\t\t<h1>Calculadora algoritmo de cuadrados medios</h1>\n\t\t\t\t<div>\n\t\t\t\t\t<Input\n\t\t\t\t\t\tid={'semilla'}\n\t\t\t\t\t\tplaceholder={'semilla'}\n\t\t\t\t\t\tonChange={(event: React.ChangeEvent<HTMLInputElement>) => {\n\t\t\t\t\t\t\tlet numero: number = +event.target.value;\n\n\t\t\t\t\t\t\tthis.setState({ semilla: numero == 0 ? undefined : numero });\n\t\t\t\t\t\t}}\n\t\t\t\t\t\tvalue={this.state.semilla}\n\t\t\t\t\t\tonKeyDown={(evt) => this.enter(evt)}\n\t\t\t\t\t/>\n\n\t\t\t\t\t<Input\n\t\t\t\t\t\tid={'cantidadNumerosR'}\n\t\t\t\t\t\tplaceholder={'Cantidad de numeros r'}\n\t\t\t\t\t\tvalue={this.state.cantidadNumerosR}\n\t\t\t\t\t\tonChange={(event: React.ChangeEvent<HTMLInputElement>) => {\n\t\t\t\t\t\t\tlet numero: number = +event.target.value;\n\n\t\t\t\t\t\t\tthis.setState({\n\t\t\t\t\t\t\t\tcantidadNumerosR: numero == 0 ? undefined : numero,\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}}\n\t\t\t\t\t\tonKeyDown={(evt) => this.enter(evt)}\n\t\t\t\t\t/>\n\n\t\t\t\t\t<button className=\"btn\" onClick={() => this.calcular()}>\n\t\t\t\t\t\tCalcular\n\t\t\t\t\t</button>\n\t\t\t\t</div>\n\n\t\t\t\t<div className=\"resultado card round\">\n\t\t\t\t\t<strong>Resultados:</strong>\n\n\t\t\t\t\t{this.state.respuesta.map((respuesta) => {\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<div key={this.state.respuesta.indexOf(respuesta)}>\n\t\t\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\t\t\tY <sub>{this.state.respuesta.indexOf(respuesta)}</sub> = ({respuesta.semilla}\n\t\t\t\t\t\t\t\t\t) <sup>2</sup> ={respuesta.cuadrado},\n\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\t\t\tX <sub>{this.state.respuesta.indexOf(respuesta) + 1}</sub> =\n\t\t\t\t\t\t\t\t\t{respuesta.numeroR},\n\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\t\t\tr<sub>{this.state.respuesta.indexOf(respuesta) + 1}</sub> = 0.\n\t\t\t\t\t\t\t\t\t{respuesta.numeroR}\n\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t);\n\t\t\t\t\t})}\n\t\t\t\t</div>\n\n\t\t\t\t<section style={{ marginTop: '1rem' }}>\n\t\t\t\t\t<strong>Pruebas</strong>\n\n\t\t\t\t\t<div className=\"medias pruebas\">\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<span className=\"titulo\">Prueba de medias. α=0.05</span>\n\n\t\t\t\t\t\t\t<div className=\"hipotesis\">\n\t\t\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\t\t\tH<sub>0</sub>: 0.5\n\t\t\t\t\t\t\t\t\t<br />H<sub>1</sub>: 0.5\n\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\t\t\t<span className=\"bar\">r</span> ={' '}\n\t\t\t\t\t\t\t\t\t{this.state.respuestaPruebasMedias.promedioR}\n\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className=\"limites\">\n\t\t\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\t\t\tLI<sub className=\"bar\">r</sub> =\n\t\t\t\t\t\t\t\t\t{this.state.respuestaPruebasMedias.LimiteInferior}\n\t\t\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t\t\t\tLS<sub className=\"bar\">r</sub> =\n\t\t\t\t\t\t\t\t\t{this.state.respuestaPruebasMedias.LimiteSuperior}\n\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t<p className=\"aceptar\">\n\t\t\t\t\t\t\t\t¿Aceptar hipótesis nula?{' '}\n\t\t\t\t\t\t\t\t<strong>\n\t\t\t\t\t\t\t\t\t{this.state.respuestaPruebasMedias.valorAceptacion ? 'Si' : 'No'}\n\t\t\t\t\t\t\t\t</strong>\n\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</section>\n\t\t\t</Layout>\n\t\t);\n\t}\n}\n","export type respuestaPruebaMedias = {\r\n\tpromedioR: number;\r\n\tLimiteInferior: number;\r\n\tLimiteSuperior: number;\r\n\tvalorAceptacion: boolean;\r\n};\r\n\r\nexport const PruebaMediasDefault: respuestaPruebaMedias = {\r\n\tpromedioR: 0,\r\n\tLimiteInferior: 0,\r\n\tLimiteSuperior: 0,\r\n\tvalorAceptacion: false,\r\n};\r\n\r\nexport default function PruebaDeMedias(lista: Array<any>): respuestaPruebaMedias {\r\n\tlet Zalphamedios: number = 1.95996;\r\n\tlet respuesta: respuestaPruebaMedias = PruebaMediasDefault;\r\n\r\n\tlet n: number = lista.length;\r\n\tlet sumatoria: number = 0;\r\n\r\n\tlista.forEach((respuesta) => {\r\n\t\tsumatoria += +`0.${respuesta.numeroR}`;\r\n\t});\r\n\r\n\tlet promedioR: number = (1 / n) * sumatoria;\r\n\trespuesta.promedioR = +promedioR.toFixed(5);\r\n\r\n\tlet raiz = Math.sqrt(12 * n);\r\n\trespuesta.LimiteInferior = +(0.5 - Zalphamedios * (1 / raiz)).toFixed(5);\r\n\trespuesta.LimiteSuperior = +(0.5 + Zalphamedios * (1 / raiz)).toFixed(5);\r\n\r\n\tif (\r\n\t\trespuesta.promedioR > respuesta.LimiteInferior &&\r\n\t\trespuesta.promedioR < respuesta.LimiteSuperior\r\n\t) {\r\n\t\trespuesta.valorAceptacion = true;\r\n\t}\r\n\r\n\treturn respuesta;\r\n}\r\n","export default function calcularSemillaMedios(numero: string) {\r\n\tlet cantidad: number = (numero.length - 4) / 2;\r\n\tlet semilla: string;\r\n\r\n\tif (numero.length % 2 == 0) {\r\n\t\tsemilla = numero.slice(cantidad, -cantidad);\r\n\t}\r\n\r\n\tif (numero.length % 2 == 1) {\r\n\t\treturn calcularSemillaMedios(`0${numero}`);\r\n\t}\r\n\r\n\treturn semilla;\r\n}\r\n"],"names":["cuadradosMedios","props","_this","state","cantidadNumerosR","semilla","respuesta","respuestaPruebasMedias","PruebaMediasDefault","calcular","this","limpiarRespuestas","semillaAnterior","String","length","undefined","i","cuadrado","Math","pow","numeroR","calcularSemillaMedios","agregarRespuesta","alert","data","PruebaDeMedias","setState","console","log","resultado","respuestas","push","enter","event","key","splice","render","React","Layout","Seo","title","description","Input","id","placeholder","onChange","numero","target","value","_this2","onKeyDown","evt","className","onClick","map","indexOf","style","marginTop","promedioR","LimiteInferior","LimiteSuperior","valorAceptacion","lista","Zalphamedios","n","sumatoria","forEach","toFixed","raiz","sqrt","cantidad","slice"],"sourceRoot":""}